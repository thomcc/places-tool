[
  
  { :db/ident :origin/prefix
    :db/valueType :db.type/string
    :db/cardinality :db.cardinality/one
    }

  { :db/ident :origin/host
    :db/valueType :db.type/string
    :db/cardinality :db.cardinality/one
    }

  ; Pages

  { :db/ident :page/url
    :db/valueType :db.type/string
    :db/cardinality :db.cardinality/one
    :db/unique :db.unique/value
    :db/index true ; required for unique/value.
    ; TODO: should this be fulltext?
    }

  { :db/ident :page/origin
    :db/valueType :db.type/ref
    :db/cardinality :db.cardinality/one
    }

  ; Page metadata (frequently stuff from the HEAD of the page)

  { :db/ident :page/title
    :db/valueType :db.type/string
    :db/cardinality :db.cardinality/one
    ; TODO this probably should have :db/index true :db/fulltext true
    }

  ; This is stored in favicons.sqlite, which we don't read, so in practice
  ; it's always empty >_>.
  { :db/ident :page/favicon_url
    :db/valueType :db.type/string
    :db/cardinality :db.cardinality/one
    }

  { :db/ident :page/description
    :db/valueType :db.type/string
    :db/cardinality :db.cardinality/one
    ; TODO: should this have index or fulltext?
    }

  { :db/ident :page/preview_image_url
    :db/valueType :db.type/string
    :db/cardinality :db.cardinality/one
    }

  ; A "context" is a tuple of (device, container).

  ; This ID is just so that we can insert with a lookup ref.
  { :db/ident :context/id
    :db/valueType :db.type/long
    :db/cardinality :db.cardinality/one
    :db/unique :db.unique/identity
    :db/index true
    }

  { :db/ident :context/device
    :db/valueType :db.type/ref
    :db/cardinality :db.cardinality/one
    }

  { :db/ident :context/container
    :db/valueType :db.type/ref
    :db/cardinality :db.cardinality/one
    }

  { :db/ident :visit/context
    :db/valueType :db.type/ref
    :db/cardinality :db.cardinality/one
    }

  { :db/ident :visit/page
    :db/valueType :db.type/ref
    :db/cardinality :db.cardinality/one
    }

  { :db/ident :visit/date
    :db/valueType :db.type/instant
    :db/cardinality :db.cardinality/one
    :db/index true
    }

  ; In the future we probably will always have sources. In practice, at the
  ; moment, we only sometimes have them. Unfortunately, even if we do have them,
  ; we fake it (and make `:visit/source_visit` point to the visit itself)
  ; because otherwise this would be really tricky to do in --realistic mode.
  ;
  { :db/ident :visit/source_visit
    :db/valueType :db.type/ref
    :db/cardinality :db.cardinality/one
    }

  ; { :db/ident :visit/source_redirect
  ;   :db/valueType :db.type/ref
  ;   :db/cardinality :db.cardinality/one
  ;   }

  ; Never used at the moment because I'm too lazy to try and model bookmarks.
  ; { :db/ident :visit/source_bookmark
  ;   :db/valueType :db.type/ref
  ;   :db/cardinality :db.cardinality/one
  ; }

  ; The `visit type` field for sync15 (hmm...)
  { :db/ident :visit/sync15_type 
    :db/valueType :db.type/long
    :db/cardinality :db.cardinality/one
    }

  ; Device

  { :db/ident :device/name
    :db/valueType :db.type/string
    :db/cardinality :db.cardinality/one
    }

  { :db/ident :device/type
    :db/valueType :db.type/ref
    :db/cardinality :db.cardinality/one
    }

  ; Several other things...

  ; (Open) enumeration of possible device types
  { :db/ident :device.type/desktop }
  { :db/ident :device.type/mobile }

  ; Container
  { :db/ident :container/name
    :db/valueType :db.type/string
    :db/cardinality :db.cardinality/one
    }
  ; ... etc. We're omitting color, the fact that some origins will open in a
  ; specific container by default, etc.

  { :db/ident :sync15.history/guid
    :db/valueType :db.type/string
    :db/cardinality :db.cardinality/one
    ; :db/unique :db.unique/identity
    ; :db/index true ; required for identity
    }

  { :db/ident :sync15.history/page
    :db/valueType :db.type/ref
    :db/cardinality :db.cardinality/one
    }

  ; `:sync15.history/page_title` doesn't need to exist, we can useÂ the title from
  ; the most recent visit

]